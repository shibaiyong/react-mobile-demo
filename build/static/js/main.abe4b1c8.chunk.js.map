{"version":3,"sources":["static/img/1.png","static/img/2.png","static/img/3.png","static/img/4.png","static/img/5.png","static/img/6.jpg","static/img/7.jpg","static/img/8.jpg","serviceWorker.js","redux/actions.js","redux/store.js","components/common/Header.js","components/common/Body.js","components/index/Index.js","components/common/Footer.js","components/details/Detail.js","components/mine/Mine.js","components/pageList/List.js","components/logins/Login.js","components/logins/Register.js","components/tabs/TabNav.js","components/tabs/TabContent.js","components/tabs/Tab.js","components/tabs/TabPane.js","components/tabs/TabUI.js","components/common/Broadcast.js","components/app/APP.js","components/common/Pagination.js","components/api/config.js","components/paginationCom/paginationCom.js","components/api/require.js","router/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","num","action","type","store","dispatch","text","copystate","createStore","state","Object","assign","Header","props","headerstyle","headerContent","willDoThing","SyntheticEvent","e","nativeEvent","keyCode","this","push","target","value","setState","willDoTing","outputData","path","history","isShowLogin","Link","goLogin","to","className","onKeyUp","addDoThing","bind","style","placeholder","React","Component","Body","bodyContent","willToDoThings","completeThings","nextProps","nextContent","Things","id","name","pathname","index","len","length","i","val","splice","console","log","slice","completeThing","deleteThing","map","item","key","onClick","linkTo","withRouter","SubMenu","Menu","MenuItemGroup","ItemGroup","IndexCom","middleData","transmitData","handleClick","data","route","float","position","top","left","width","defaultSelectedKeys","defaultOpenKeys","mode","title","Item","Footer","footerContent","Detail","MyContext","createContext","Mine","theme","setTimeout","Provider","children","BrowserRouter","myhistory","List","listData","Login","unsubscribe","submitForm","textInput","createRef","focusInput","event","username","password","remember","checked","loginForm","current","focus","ref","input","height","border","onBlur","changeText","Consumer","connect","Register","getState","registerForm","changeNum","tempState","attribute","elementType","subscribe","onChange","handleActionChange","TabNav","nav","padding","panels","tabClick","Children","child","panelIndex","tabcontent","overflow","getTabs","TabContent","activeIndex","cloneElement","getPanels","Tab","handelTabClick","renderTabNav","renderTabContent","TabPane","Tabs","Broadcast","smallImgList","url","require","showImgList","bigId","bigImg","displayImgIndex","showImgLength","showImgLen","showBigImg","leftImg","prevState","prop","imgindex","src","turnPage","App","PageCom","showButtonNum","pageNum","currentPage","nextprops","calculatePageNum","calculateCurrentPage","preventDefault","Math","floor","page","dataLength","eachPageShow","ceil","pageNumArr","button","idx","allPage","basePage","startPage","endPage","href","clickPageButton","renderPageButton","handleInput","instance","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","sessionStorage","getItem","err","Promise","reject","response","code","error","PaginationCom","dataLen","method","params","then","res","resolve","catch","getWeather15","supportsHistory","Root","forceRefresh","Store","Switch","Route","exact","component","paginationCom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abe4b1c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.6432d61a.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c6c07c4e.png\";","module.exports = __webpack_public_path__ + \"static/media/3.b254a801.png\";","module.exports = __webpack_public_path__ + \"static/media/4.b5951bed.png\";","module.exports = __webpack_public_path__ + \"static/media/5.6c6056bf.png\";","module.exports = __webpack_public_path__ + \"static/media/6.c62f8353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.8104888d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.d107ab13.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import store from './store'\r\n\r\nexport default {\r\n  changeNum:(num) => {\r\n    var action={\r\n      type:'changenum',\r\n      num:num\r\n    }\r\n    store.dispatch(action)\r\n  },\r\n  changeText:function(text){\r\n    var action={\r\n      type:'changetext',\r\n      text:text\r\n    }\r\n    store.dispatch(action)\r\n  }\r\n}","import { createStore } from 'redux'\r\nimport action from './actions'\r\n\r\nvar copystate={\r\n  num:0,\r\n  text:'hello word'\r\n}\r\n\r\n//面向对象的编程方法，createStore相当于构造函数。而且reducer是纯函数。\r\nvar reducer = (state={  //注意传参数的方式\r\n  num:0, text:'hello word11'},action)=>{\r\n  switch(action.type) {\r\n    case 'changenum':\r\n      copystate.num++;  //不建议直接修改state,可以采用 ... 或者 Object.assign()\r\n      return Object.assign({},state,{num:copystate.num})\r\n      break;\r\n    case 'changetext':\r\n      return Object.assign({},state,{text:action.text})\r\n      break;\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\r\nvar store = createStore(reducer)\r\n\r\nexport default store","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.headerstyle = {\r\n\r\n        }\r\n        this.state = {\r\n            headerContent: 'ToDoList',\r\n            willDoThing: [],\r\n        }\r\n        //this.addDoThing = this.addDoThing.bind(this)\r\n    }\r\n    addDoThing(SyntheticEvent) {\r\n        //需要传入额外参数时，事件对象放在最后传入，并且不能省略。\r\n        //console.log(SyntheticEvent.nativeEvent)\r\n        let e = SyntheticEvent.nativeEvent\r\n        if (e.keyCode == 13) {\r\n            this.state.willDoThing.push(e.target.value)\r\n            //异步\r\n            this.setState({\r\n                willDoTing: this.state.willDoThing\r\n            })\r\n            //同步\r\n            // this.setState((prevState,prop)=>({\r\n            //   willDoTing:prevState\r\n            // }))\r\n            this.props.outputData(this.state.willDoThing);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n    linkTo(path) {\r\n        this.props.history.push(path)\r\n    }\r\n    componentDidMount() {\r\n        \r\n    }\r\n    render() {\r\n\r\n        // let loginInfo = this.props.isShowLogin ? (<div className=\"login-info\"><span onClick={ this.linkTo.bind(this,'/mine/login')}>Login</span>&nbsp;&nbsp;\r\n        // <span onClick={ this.linkTo.bind(this,'/mine/register') }>Register</span>&nbsp;&nbsp;</div>) : '';\r\n        //let goLogin = this.props.isShowLogin ? '' : <Link to='/mine'>去登录</Link>;\r\n        let loginInfo = this.props.isShowLogin ? (<div className=\"login-info\"><Link to=\"/mine/login\"><span>Login</span></Link>&nbsp;&nbsp;\r\n        <Link to=\"/mine/register\"><span>Register</span></Link>&nbsp;&nbsp;</div>) : '';\r\n        let goLogin = this.props.isShowLogin ? '' : <Link to='/mine/login'>去登录</Link>;\r\n\r\n        return (\r\n            \r\n            <div className='header'>\r\n                {goLogin}\r\n                <header>\r\n                    <Link to=\"/\">{this.state.headerContent}</Link>\r\n                    <input onKeyUp={this.addDoThing.bind(this)} style={this.headerstyle} placeholder='To Do List' type='text' />\r\n                </header>\r\n                {\r\n                    this.props.isShowLogin && (<div className=\"login-info\">\r\n                                                    <Link to=\"/mine/login\"><span>Login</span></Link>&nbsp;&nbsp;\r\n                                                    <Link to=\"/mine/register\"><span>Register</span></Link>&nbsp;&nbsp;\r\n                                                </div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n// import { browserHistory } from 'react-router'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Body extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      bodyContent: 'Hello Word!!!',\r\n      willToDoThings: [],\r\n      completeThings: []\r\n    }\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContent) {\r\n    //console.log(this.props)  //可以获得最新的prop\r\n    //console.log(nextProps)   //同上\r\n    this.setState({\r\n      willToDoThings: nextProps.Things\r\n    })\r\n  }\r\n  linkTo(id, name) {\r\n    this.props.history.push({ pathname: '/detail', state: { id: id, name: name } })\r\n  }\r\n  deleteThing(index) {\r\n    var len = this.state.willToDoThings.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (i == index) {\r\n        let val = this.state.willToDoThings.splice(i, 1);//返回值是别删除的项\r\n        console.log(val)\r\n        this.setState({\r\n          willToDoThings: this.state.willToDoThings\r\n        })\r\n      }\r\n    }\r\n  }\r\n  completeThing(index) {\r\n    var len = this.state.willToDoThings.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (i == index) {\r\n        let val = this.state.willToDoThings.slice(i, i + 1);//返回值是别删除的项\r\n        this.state.completeThings.push(val)\r\n        this.setState({\r\n          completeThing: this.state.completeThing\r\n        })\r\n\r\n        this.deleteThing(index);\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='body'>\r\n        <h5>正在进行</h5>\r\n        <ul className=\"listitem\">\r\n          {\r\n            this.state.willToDoThings.map((item, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <input type=\"checkbox\" />\r\n                  <p>{item}</p>\r\n                  <a onClick={this.linkTo.bind(this, index, item)}>详</a>\r\n                  <a onClick={this.deleteThing.bind(this, index)}>删</a>\r\n\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        <h5>已完成</h5>\r\n        <ul>\r\n          {\r\n            this.state.completeThings.map((item, index) => {\r\n              return (\r\n                <li key={index}>{index}--{item}</li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Body)","import React from 'react'\r\n\r\nimport Header from '../common/Header.js'\r\nimport Body from '../common/Body.js'\r\n\r\nimport Menu from 'antd/lib/menu'\r\nimport Icon from 'antd/lib/icon'\r\nconst SubMenu = Menu.SubMenu\r\nconst MenuItemGroup = Menu.ItemGroup\r\n\r\nclass IndexCom extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            middleData: [0]\r\n        }\r\n        this.transmitData = this.transmitData.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    transmitData(data) {\r\n        this.setState({\r\n            middleData: data\r\n        })\r\n    }\r\n    linkTo(route, data) {\r\n\r\n        this.props.history.push(route)\r\n    }\r\n    handleClick(e) {\r\n        this.linkTo(e.key);\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props.match);\r\n        // console.log(this.props.history);\r\n        // console.log(this.props.location);\r\n    }\r\n    render() {\r\n\r\n        let backAndTextColor = {\r\n            backgroundColor: 'red',\r\n            color: 'white',\r\n            fontSize: 40\r\n        };\r\n        return (\r\n            <div className='index'>\r\n                <Header outputData={this.transmitData} />\r\n                <Body Things={this.state.middleData} />\r\n                <div style={{ float: 'left', position: 'absolute', top: '80px', left: '40px' }}>\r\n                    <Menu\r\n                        onClick={this.handleClick}\r\n                        style={{ width: 240 }}\r\n                        defaultSelectedKeys={['1']}\r\n                        defaultOpenKeys={['sub1']}\r\n                        mode=\"inline\">\r\n                        <SubMenu key=\"sub1\" title={<span><Icon type=\"mail\" /><span>导航一</span></span>}>\r\n                            <MenuItemGroup key=\"g1\" title=\"第一组\">\r\n                                <Menu.Item key=\"/tabs\">Tab切换</Menu.Item>\r\n                                <Menu.Item key=\"/list\">列表页</Menu.Item>\r\n                            </MenuItemGroup>\r\n                            <MenuItemGroup key=\"g2\" title=\"第二组\">\r\n                                <Menu.Item key=\"/broadcast\">轮播图</Menu.Item>\r\n                                <Menu.Item key=\"/paginationcom\">分页组件</Menu.Item>\r\n                            </MenuItemGroup>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" title={<span><Icon type=\"appstore\" /><span>Navigation Two</span></span>}>\r\n                            <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n                            <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n                            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n                                <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n                                <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub4\" title={<span><Icon type=\"setting\" /><span>Navigation Three</span></span>}>\r\n                            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n                            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n                            <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default IndexCom\r\n","import React from 'react'\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            footerContent: 'This is Footer'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='footer'>\r\n                {/* <Link to='/mine'>Mine</Link> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Header from '../common/Header.js'\r\nimport Footer from '../common/Footer.js'\r\n\r\nclass Detail extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.location)\r\n    console.log(this.props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='detail'>\r\n        <Header />\r\n        Detail 的 url 参数是： {this.props.location.state.id}--{this.props.location.state.name}\r\n        <Footer />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Detail","import React from 'react';\r\nimport Header from '../common/Header'\r\n\r\n//Context 通过组件树提供了一个传递数据的方法，从而避免了在每一个层级手动的传递 props 属性。\r\n\r\nconst MyContext = React.createContext('light');\r\n\r\nclass Mine extends React.Component {\r\n  constructor(props) {\r\n    \r\n    super(props)\r\n    this.headerstyle = {\r\n    }\r\n    this.isShowLogin = true\r\n    this.state = {\r\n      theme:'dark'\r\n    }\r\n  }\r\n  \r\n  addDoThing() {\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props)\r\n    setTimeout(()=>{\r\n      this.setState({\r\n        theme:'light'\r\n      })\r\n    },2000)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { theme } = this.state\r\n\r\n    return (\r\n      <MyContext.Provider value={theme}>\r\n      <div className='mine'>\r\n        \r\n        <Header isShowLogin={this.isShowLogin} />\r\n        {this.props.children}\r\n        \r\n      </div>\r\n      </MyContext.Provider>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport {Mine,MyContext}\r\n","import React from 'react'\r\n\r\nimport Header from '../common/Header.js'\r\nimport Footer from '../common/Footer.js'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nconst { history:myhistory, location } = new BrowserRouter()\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.listData = [\r\n      { id: 1, name: 'hahah111' },\r\n      { id: 2, name: 'hahah222' },\r\n      { id: 3, name: 'hahah333' },\r\n      { id: 4, name: 'hahah444' },\r\n      { id: 5, name: 'hahah555' },\r\n      { id: 6, name: 'hahah666' },\r\n      { id: 7, name: 'hahah777' }\r\n    ]\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(myhistory)\r\n    console.log(this.props.history)\r\n    myhistory.push('/')\r\n  }\r\n  linkTo(id, name) {\r\n\t\t//this.props.history.push('/detail',{ id: id,name: name }) //两种方式跳转都行\r\n    this.props.history.push({pathname: '/detail', state: { id: id, name: name }})\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"list\">\r\n        <Header />\r\n        <ul>\r\n          {\r\n            this.listData.map((item, index) => {\r\n              return (\r\n                <li key={index} onClick={this.linkTo.bind(this, item.id, item.name)}>\r\n                  {item.id}-------------------------------------{item.name}\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        <Footer />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default List","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { MyContext } from '../mine/Mine'\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.headerstyle = {\r\n    }\r\n    this.state = {\r\n\r\n    }\r\n\r\n    this.unsubscribe = null\r\n\r\n    this.submitForm = this.submitForm.bind(this)\r\n\r\n    this.textInput = React.createRef()\r\n\r\n    this.focusInput = this.focusInput.bind(this)\r\n  }\r\n\r\n  submitForm(event) {\r\n    //非受控组件表单提交\r\n    let username = this.username.value //等同于 focusInput 中 this.textInput.current = this.username\r\n    let password = this.password.value\r\n    let remember = this.remember.checked\r\n    this.loginForm = { username, password, remember }\r\n    console.log(this.loginForm)\r\n  }\r\n\r\n  focusInput(){\r\n    this.textInput.current.focus()\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  componentWillUnmount() {\r\n    //组件销毁之前取消监听，因为被销毁的组件无法响应store里面的数据变化。\r\n    //this.unsubscribe()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='login'>\r\n        <ul>\r\n          <li><label>UserName&nbsp;:&nbsp;&nbsp;</label><input ref={input => this.username = input} type=\"text\" className='shi-input' /></li>\r\n          <li><label>Password&nbsp;:&nbsp;&nbsp;</label><input ref={input => this.password = input} type=\"text\" className='shi-input' /></li>\r\n          <li><input type=\"submit\" className='shi-input' value='登录' onClick={this.submitForm}/></li>\r\n          <li><input type=\"checkbox\" ref={input => this.remember = input}/>记住密码</li>\r\n        </ul>\r\n        <div style={{ width: '300px', height: '100px', border: '1px solid blue' }}>\r\n\r\n          <input type='text' onBlur={this.props.changeText} ref={this.textInput}/>\r\n\r\n          <span onClick={this.focusInput}>{this.props.text}</span><br />\r\n          {this.props.num}\r\n        </div>\r\n        <MyContext.Consumer>\r\n          { value => <span>{value}</span> }\r\n        </MyContext.Consumer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n//需要渲染什么数据\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    num: state.num,\r\n    text: state.text\r\n  }\r\n}\r\n//需要触发什么行为\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    // changeNum: () => dispatch({ type: 'changenum', num: num }),\r\n    changeText: (e) => {\r\n      var val = e.target.value\r\n      dispatch({ type: 'changetext', text: val })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React from 'react';\r\nimport store from '../../redux/store'\r\nimport action from '../../redux/actions'\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.headerstyle = {\r\n\r\n    }\r\n    this.state = {\r\n      num: store.getState().num,\r\n      text: store.getState().text,\r\n      registerForm:{\r\n        username:'shi',\r\n        password:'123',\r\n        remember:true\r\n      }\r\n    }\r\n    this.changeText = this.changeText.bind(this)\r\n    this.changeNum = this.changeNum.bind(this)\r\n    // this.handleActionChange = this.handleActionChange(this)\r\n    this.unsubscribe = null\r\n  }\r\n  addDoThing() {\r\n\r\n  }\r\n\r\n  changeNum() {\r\n    action.changeNum();\r\n  }\r\n  changeText(e) {\r\n    var val = e.target.value;\r\n    action.changeText(val);\r\n  }\r\n\r\n  handleActionChange(event){\r\n    \r\n    let e = event.nativeEvent\r\n\r\n    //let tempState = {...this.state.registerForm,[atttibute]:e.target.value}\r\n\r\n    let attribute = e.target.name\r\n\r\n    let elementType = e.target.type\r\n\r\n    let tempState\r\n\r\n    if(elementType == 'checkbox' || elementType == 'radio'){\r\n\r\n      tempState = Object.assign({},this.state.registerForm,{[attribute]:e.target.checked})\r\n\r\n    }else{\r\n\r\n      tempState = Object.assign({},this.state.registerForm,{[attribute]:e.target.value})\r\n\r\n    }\r\n\r\n    this.setState({\r\n      registerForm:tempState\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    //受控组件表单提交\r\n    console.log(this.state.registerForm)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = store.subscribe(() => {\r\n      this.setState({\r\n        num: store.getState().num,\r\n        text: store.getState().text\r\n      })\r\n      //同步方式修改状态\r\n\r\n      // this.setState(function (prevState, props) {\r\n      //   return { num:store.getState().num}\r\n      // })\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    //组件销毁之前取消监听，因为被销毁的组件无法响应store里面的数据变化。\r\n    this.unsubscribe()\r\n  }\r\n  render() {\r\n    const registerForm = this.state.registerForm\r\n    return (\r\n      <div className='login'>\r\n        <ul>\r\n          <li><label>User Name&nbsp;:&nbsp;&nbsp;</label><input type=\"text\" value={registerForm.username} onChange={this.handleActionChange.bind(this)} name='username' className='shi-input' /></li>\r\n          <li><label>Password&nbsp;:&nbsp;&nbsp;</label><input type=\"text\" value={registerForm.password} onChange={this.handleActionChange.bind(this)} name='password' className='shi-input' /></li>\r\n          <li><input type=\"submit\" onClick={this.submitForm.bind(this)} className='shi-input' value='注册' /></li>\r\n          <li><input type=\"checkbox\" checked={registerForm.remember} name=\"remember\" onChange={this.handleActionChange.bind(this)}/>记住密码</li>\r\n        </ul>\r\n        <div style={{ width: '300px', height: '100px', border: '1px solid red' }}>\r\n          <button onClick={this.changeNum}>num++</button>\r\n          {this.state.text}<br />\r\n          {this.state.num}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n// import { list } from '_postcss@6.0.22@postcss';\r\n\r\nclass TabNav extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.nav={\r\n      float:'left',\r\n      padding:'0 15px'\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  getTabs(){\r\n    const {panels,tabClick} = this.props;\r\n    return React.Children.map(panels,(child)=>{\r\n      \r\n      const { panelIndex } = child.props;\r\n      return (\r\n        <li style={this.nav} onClick={tabClick.bind(null,panelIndex)}>\r\n          {child.props.tabcontent}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <ul className='tabpane' style={{overflow:'hidden'}}>\r\n        {this.getTabs()}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabNav","import React from 'react'\r\n\r\nclass TabContent extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n  }\r\n\r\n  getPanels(){\r\n    const { panels , activeIndex} = this.props;\r\n    return React.Children.map(panels,(child)=>{\r\n      let panelIndex=child.props.panelIndex;\r\n      return React.cloneElement(child,{\r\n        className:activeIndex==panelIndex?'activeIndex':'noIndex'\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        {this.getPanels()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TabContent","import React from 'react'\r\nimport TabNav from './TabNav'\r\nimport TabContent from './TabContent'\r\nimport Header from '../common/Header.js'\r\n\r\nclass Tab extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      activeIndex:'1'\r\n    }\r\n    this.handelTabClick=this.handelTabClick.bind(this);\r\n  }\r\n\r\n  handelTabClick(activeIndex){\r\n    this.setState({\r\n      activeIndex:activeIndex\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n  }\r\n\r\n  renderTabNav(){\r\n    const {children}=this.props\r\n    return <TabNav panels={children} tabClick={this.handelTabClick}></TabNav>\r\n  }\r\n\r\n  renderTabContent(){\r\n    const {children}=this.props\r\n    return <TabContent panels={children} activeIndex={this.state.activeIndex}></TabContent>\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        {this.renderTabNav()}\r\n        {this.renderTabContent()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Tab","import React from 'react'\r\n\r\nclass TabPane extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  getTabs(){\r\n    \r\n\r\n  }\r\n\r\n  render(){\r\n    \r\n    return (\r\n      <div className={this.props.className}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TabPane","import React from 'react'\r\nimport Tab from './Tab'\r\nimport TabPane from './TabPane'\r\nimport { withRouter } from 'react-router-dom'\r\nclass Tabs extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Tab>\r\n        <TabPane key={0} tabcontent={'tabpane1'} panelIndex='1'>tabpane111111111111</TabPane>\r\n        <TabPane key={1} tabcontent={'tabpane2'} panelIndex='2'>tabpane222222222222</TabPane>\r\n        <TabPane key={2} tabcontent={'tabpane3'} panelIndex='3'>tabpane333333333333</TabPane>\r\n      </Tab>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Tabs","import React from 'react'\r\n\r\nimport Header from '../common/Header.js'\r\n\r\nclass Broadcast extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            smallImgList: [\r\n                { id: 1, url: require('../../static/img/1.png') },\r\n                { id: 2, url:  require('../../static/img/2.png') },\r\n                { id: 3, url:  require('../../static/img/3.png') },\r\n                { id: 4, url:  require('../../static/img/4.png') },\r\n                { id: 5, url:  require('../../static/img/5.png') },\r\n                { id: 6, url:  require('../../static/img/6.jpg') },\r\n                { id: 7, url:  require('../../static/img/7.jpg') },\r\n                { id: 8, url:  require('../../static/img/8.jpg') }\r\n            ],//数据源\r\n            showImgList: [],//要展示的下方的小图片列表\r\n            bigId: '',     //展示的大图,值是图片的id\r\n            bigImg: '',\r\n            displayImgIndex: 0,  //当前展示的图片在小图列表中的下标。\r\n            showImgLength: this.props.showImgLen || 5  //要展示的图片的个数（下方的小图）。默认是5个\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showBigImg(this.state.displayImgIndex);\r\n        //初始化展示的小图个数。\r\n        this.setState({\r\n            showImgList: this.state.smallImgList.slice(0, this.state.showImgLength)\r\n        })\r\n    }\r\n\r\n    //翻页操作\r\n    turnPage(type) {\r\n        var index;\r\n        var len = this.state.smallImgList.length;\r\n        if (type == 'nextPage') {\r\n\r\n            index = this.state.displayImgIndex + 1 > len - 1 ? 0 : this.state.displayImgIndex + 1;//判断最后一页，调到第一页\r\n\r\n        } else {\r\n\r\n            index = this.state.displayImgIndex - 1 < 0 ? len - 1 : this.state.displayImgIndex - 1;//判断第一页调到最后一页\r\n\r\n        }\r\n\r\n        if (index == len - 1 && type == 'prevPage') {\r\n            let leftImg = index % this.state.showImgLength + 1;\r\n            this.setState({\r\n                showImgList: this.state.smallImgList.slice(-leftImg)\r\n            })\r\n        }\r\n        else if (index % this.state.showImgLength == 0 && type == 'nextPage') {\r\n            this.setState({\r\n                showImgList: this.state.smallImgList.slice(index, index + this.state.showImgLength)\r\n            })\r\n        } else if (index % this.state.showImgLength == 4 && type == 'prevPage') {\r\n            this.setState({\r\n                showImgList: this.state.smallImgList.slice(index + 1 - this.state.showImgLength, index + 1)\r\n            })\r\n        }\r\n\r\n        this.setState({ displayImgIndex: index }, (prevState, prop) => {\r\n\r\n            this.showBigImg(this.state.displayImgIndex)\r\n\r\n        })\r\n    }\r\n\r\n    showBigImg(index) {\r\n        var imgindex = this.state.smallImgList[index]\r\n        this.setState({\r\n            bigId: imgindex.id,\r\n            bigImg: imgindex.url\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.showImgList);\r\n        var bigId = this.state.bigId;\r\n        return (\r\n            <div className='broadcast'>\r\n                <Header />\r\n                <div className=\"bigshowcontainer\">\r\n                    <img src={this.state.bigImg} />\r\n                </div>\r\n\r\n                <div className=\"smallimglist\">\r\n                    <div className=\"left\" onClick={this.turnPage.bind(this, 'prevPage')}>prevPage</div>\r\n                    <ul>\r\n                        {\r\n                            this.state.showImgList.map((item, index) => {\r\n                                return (\r\n                                    bigId == item.id ? <li className=\"border\" key={item.id}><img src={item.url} /></li> : <li key={item.id}><img src={item.url} /></li>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <div className=\"right\" onClick={this.turnPage.bind(this, 'nextPage')}>nextPage</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Broadcast\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  componentDidMount() {\r\n    // console.log(this.props.match);\r\n    // console.log(this.props.history);\r\n    // console.log(this.props.location);\r\n\r\n    // this.props.history.listen(() => {\r\n    //   console.log('hahahahahha')\r\n    // })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"rootContainer\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(App)","import React from 'react'\r\n\r\nclass PageCom extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showButtonNum: 7,\r\n            pageNum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n            currentPage: 4\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        //在这里根据父组件传过来的props更新状态，不会触发额外得render。但是在第一次渲染的时候不执行。这也是他跟willmount的区别。\r\n        \r\n    }\r\n    componentWillMount() {\r\n        \r\n        //在这里根据父组件传过来的props更新状态，不会触发额外得render.在componentWillReceiveProps中同样是安全的\r\n        this.calculatePageNum();\r\n        this.calculateCurrentPage();\r\n    }\r\n    componentDidMount() {\r\n        \r\n        //this.calculateCurrentPage();\r\n\r\n    }\r\n    //点击翻页按钮执行的逻辑\r\n    turnPage(type, e) {\r\n        e.preventDefault()\r\n        let currentPage = this.state.currentPage\r\n        let basePage = Math.floor(this.state.showButtonNum / 2)\r\n        let startPage = (currentPage - 1) - basePage\r\n        let endPage = currentPage + basePage\r\n        if (type == 'next' && currentPage < this.state.pageNum.length) {\r\n            this.setState({\r\n                currentPage: ++this.state.currentPage\r\n            })\r\n        } else if (type == 'prev' && currentPage > 1) {\r\n            this.setState({\r\n                currentPage: --this.state.currentPage\r\n            })\r\n        }\r\n    }\r\n    //点击页数按钮\r\n    clickPageButton(page, e) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            currentPage: page\r\n        })\r\n    }\r\n    //输入页数前往逻辑\r\n    //非受控组件应用实例\r\n    handleInput() {\r\n        //乘1时间，表单获取的字符串类型的数字，转成数值类型，否则显示异常。\r\n        this.setState({\r\n            currentPage: this.input.value * 1\r\n        })\r\n    }\r\n    //计算页数\r\n    calculatePageNum() {\r\n        const { dataLength, eachPageShow } = this.props\r\n        const pageNum = Math.ceil(dataLength / eachPageShow)\r\n        var pageNumArr = []\r\n        for (var i = 1; i <= pageNum; i++) {\r\n            pageNumArr[i - 1] = i\r\n        }\r\n        this.setState({\r\n            pageNum: pageNumArr\r\n        })\r\n    }\r\n    //计算当前页\r\n    calculateCurrentPage() {\r\n        let button = this.props.showButtonNum || this.state.showButtonNum\r\n        let currentPage = Math.ceil(button / 2)\r\n        this.setState({\r\n            currentPage: currentPage,\r\n            showButtonNum: button\r\n        })\r\n    }\r\n    //渲染要展示出来的按钮\r\n    renderPageButton(idx) {\r\n        \r\n        let currentPage = idx || this.state.currentPage\r\n        let allPage = this.state.pageNum.length\r\n        let basePage = Math.floor(this.state.showButtonNum / 2)\r\n        let startPage = (currentPage - 1) - basePage\r\n        let endPage = currentPage + basePage\r\n        if (startPage < 0) {\r\n            endPage -= startPage\r\n            startPage = 0\r\n        }\r\n        if (endPage > allPage) {\r\n            startPage -= endPage - allPage\r\n        }\r\n        let renderPageNum = this.state.pageNum.slice(startPage, endPage)\r\n        return renderPageNum.map((item) => {\r\n            return (\r\n                <li className={this.state.currentPage == item ? 'active' : ''} key={item}><a href=\"#\" onClick={this.clickPageButton.bind(this, item)}>{item}</a></li>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"page-container\">\r\n                <div className=\"data-info\">\r\n                    <span>共</span><span>12</span><span>条</span>\r\n                </div>\r\n                <ul className=\"data-number\">\r\n                    <li><a href=\"#\" onClick={this.turnPage.bind(this, 'prev')}>&#60;</a></li>\r\n                    {this.renderPageButton()}\r\n                    <li><a href=\"#\" onClick={this.turnPage.bind(this, 'next')}>&#62;</a></li>\r\n                </ul>\r\n                <div className=\"goto-page\">\r\n                    <span>前往</span>\r\n                    <input type=\"text\" className=\"shi-input\" ref={input => this.input = input} />\r\n                    <a href=\"javascript:void(0)\" onClick={this.handleInput.bind(this)}>确定</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageCom","\r\nimport axios from 'axios'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n// import createBrowserHistory from 'history/createBrowserHistory'\r\n\r\n// const { history, location } = new BrowserRouter()\r\n\r\nlet instance = axios.create({\r\n  baseURL: 'http://t.weather.sojson.com'\r\n})\r\n\r\n//请求的全局拦截器\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    \r\n    config.headers.Authorization = sessionStorage.getItem('RyxToken')\r\n    return config\r\n  },\r\n  err => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\ninstance.interceptors.response.use(\r\n    response => {\r\n        if (response.data.code == 2002) {\r\n            // return router.replace('/login')\r\n        }\r\n        return response\r\n    },\r\n    error => {\r\n        //history.push('/mine/login')\r\n        //location.href = 'http://localhost:8080/mine/login?id=1'\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default instance\r\n","import React from 'react'\r\nimport PageCom from '../common/Pagination'\r\nimport { getWeather } from '../api/require'\r\n\r\nclass PaginationCom extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataLen: 100,\r\n            eachPageShow: 10,\r\n            showButtonNum: 5\r\n        }\r\n    }\r\n    getWeather15() {\r\n        getWeather().then(res => {\r\n            \r\n        }).catch(err => {\r\n            \r\n        })\r\n    }\r\n    componentDidMount() {\r\n        //this.props.history.push('/list')\r\n        this.getWeather15()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"paginationcontainer\">\r\n                <PageCom dataLength={this.state.dataLen} eachPageShow={this.state.eachPageShow} showButtonNum={this.state.showButtonNum} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaginationCom","import instance from './config.js'\r\n\r\n\r\nexport const getWeather = () => {\r\n    let url = '/api/weather/city/101030100'\r\n    let method = 'get'\r\n    let params = {\r\n        id: 1\r\n    }\r\n    return instance.request({ url, method, params })\r\n        .then(res => {\r\n            return Promise.resolve(res)\r\n        })\r\n        .catch(err => {\r\n            return Promise.reject(err)\r\n        })\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'; // react和redux连接的桥梁，就是这个Provider\r\n\r\nimport Store from '../redux/store.js';\r\n\r\nimport IndexCom from '../components/index/Index.js'\r\nimport Detail from '../components/details/Detail.js'\r\nimport {Mine} from '../components/mine/Mine.js'\r\nimport List from '../components/pageList/List.js'\r\nimport Login from '../components/logins/Login'\r\nimport Register from '../components/logins/Register'\r\nimport Tabs from '../components/tabs/TabUI'\r\nimport Broadcast from '../components/common/Broadcast'\r\nimport App from '../components/app/APP'\r\nimport paginationCom from '../components/paginationCom/paginationCom'\r\n\r\nconst supportsHistory = 'pushState' in window.history\r\n\r\n// const IndexCom = React.lazy(() => import('../components/index/Index.js'))\r\n// const Register = React.lazy(() => import('../components/logins/Register'))\r\n// const Login = React.lazy(() => import('../components/logins/Login'))\r\n\r\n\r\n// react-router 4.0之前的路由写法\r\n// const Root = () => (\r\n//   <Router history={browserHistory}>\r\n//     <Route path=\"/\" component={IndexCom}></Route>\r\n//     <Route path='/detail' component={Detail}></Route>   \r\n//     <Route path='/tabs' component={Tabs}></Route>\r\n//     <Route path='/list' component={List}></Route>\r\n//     <Route path='/broadcast' component={Broadcast}></Route>\r\n//     <Route path='/mine' component={Mine}>\r\n//       <IndexRoute component={Login}/> \r\n//       <Route path='/mine/login' component={Login}></Route>\r\n//       <Route path='/mine/register' component={Register}></Route>\r\n//     </Route>\r\n//   </Router>\r\n// )\r\n\r\nconst Root = () => (\r\n  <BrowserRouter forceRefresh={!supportsHistory}>\r\n    <Provider store={Store}>\r\n      <App>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\" component={IndexCom}></Route>\r\n          <Route path='/detail' component={Detail}></Route>\r\n          <Route exact path='/tabs' component={Tabs}></Route>\r\n          <Route exact path='/list' component={List}></Route>\r\n          <Route path='/broadcast' component={Broadcast}></Route>\r\n          <Route path='/paginationcom' component={paginationCom}></Route>\r\n          <Mine>\r\n            <Route exact path='/mine/login' component={Login}></Route>\r\n            <Route path='/mine/register' component={Register}></Route>\r\n          </Mine>\r\n        </Switch>\r\n        \r\n      </App>\r\n    </Provider>\r\n  </BrowserRouter>\r\n)\r\n\r\n\r\n{/* <Router component={App}>\r\n        <Route exact path=\"/\" auth=\"true\" component={IndexCom}></Route>\r\n        <Route path='/detail' component={Detail}></Route>\r\n        <Route exact path='/tabs' component={Tabs}></Route>\r\n        <Route exact path='/list' component={List}></Route>\r\n        <Route path='/broadcast' component={Broadcast}></Route>\r\n        <Route path='/paginationcom' component={paginationCom}></Route>\r\n        <Router component={Mine}>\r\n          <Route exact path='/mine/login' component={Login}></Route>\r\n          <Route path='/mine/register' component={Register}></Route>\r\n        </Router>\r\n      </Router> \r\n    \r\n    <App>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={IndexCom}></Route>\r\n          <Route path='/detail' component={Detail}></Route>\r\n          <Route exact path='/tabs' component={Tabs}></Route>\r\n          <Route exact path='/list' component={List}></Route>\r\n          <Route path='/broadcast' component={Broadcast}></Route>\r\n          <Route path='/paginationcom' component={paginationCom}></Route>\r\n          <Mine>\r\n            <Route exact path='/mine/login' component={Login}></Route>\r\n            <Route path='/mine/register' component={Register}></Route>\r\n          </Mine>\r\n        </Switch>\r\n      </App>\r\n    \r\n    \r\n  */}\r\n\r\n// react-router 4.x 新的写法\r\n// render 方法渲染组件时,props要显式的传入组件中;这里的props分别代表 history location match;这样在根组件中就可以使用了，否则在app组件中无法使用。\r\n// const Router = ({ component: Component, children }) => \r\n//   (<Route\r\n//     render={props => {\r\n\r\n//       let renderRouter = children.find(item => item.props.path == props.location.pathname)\r\n//       return (<Component {...props}><Switch>{children}</Switch></Component>)\r\n//     }\r\n//     }\r\n//   />)\r\n\r\nconst routerList = [\r\n  {\r\n    path: '/',\r\n    component: IndexCom,\r\n    auth: true,\r\n    title:'首页'\r\n  }, {\r\n    path: '/detail',\r\n    component: Detail,\r\n    auth: true,\r\n    title:'详情页'\r\n  }, {\r\n    path: '/tabs',\r\n    component: Tabs,\r\n    title:'tab页'\r\n  }, {\r\n    path: '/list',\r\n    component: List,\r\n    title:'列表页'\r\n  }, {\r\n    path: '/broadcast',\r\n    component: Broadcast,\r\n    title:'轮播图'\r\n  }, {\r\n    path: '/paginationcom',\r\n    component: paginationCom,\r\n    title: '分页'\r\n  }, {\r\n    path: '/mine/login',\r\n    ParentComponent: Mine,\r\n    component: Login,\r\n    title:'登录'\r\n  }, {\r\n    path: '/mine/register',\r\n    ParentComponent: Mine,\r\n    component: Register,\r\n    title:'注册'\r\n  }\r\n]\r\n\r\n\r\nclass RouterBefore extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    console.log(this.props)\r\n    \r\n    const { location : { pathname },routerList } = this.props;\r\n    \r\n    const TargetRoute = routerList.find(( item ) => {\r\n      return item.path === pathname\r\n    })\r\n    if(!TargetRoute){//路由不合法,重定向\r\n      return <Redirect to='/'/>\r\n    }\r\n\r\n    const { path, component, ParentComponent, title } = TargetRoute\r\n\r\n    document.title = title\r\n\r\n    if(!ParentComponent){//没有子路由的组件\r\n\r\n      return <Route exact path={ path } component={ component } />\r\n\r\n    }else{//有子路由的组件\r\n\r\n      return <Route\r\n        render = {\r\n          props => {\r\n            return (<ParentComponent {...props}><Route exact path={ path } component={ component } /></ParentComponent>)\r\n          }\r\n        }/>\r\n    }\r\n    \r\n  }\r\n}\r\n\r\n// const Root = () => (\r\n//   <BrowserRouter>\r\n//     <Provider store={Store}>\r\n//       <App>\r\n//         <Switch>\r\n//           <RouterBefore routerList={routerList}/>\r\n//         </Switch>\r\n//       </App>\r\n//     </Provider>\r\n//   </BrowserRouter>\r\n// )\r\n\r\n\r\nexport default Root\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nimport './static/style/common.css'\nimport './static/style/index.css'\n// import 'antd/dist/antd.css';\nimport 'antd/lib/menu/style/css'\nimport 'antd/lib/icon/style/css'\n\n// import Root from './components/app/APP'\n\nimport Root from './router/index.js'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}